var TimeLimitedCache = function() {
  this.cache = new Map();
};

TimeLimitedCache.prototype.set = function(key, value, duration) {
  if (this.cache.has(key) && !this.isExpired(this.cache.get(key).expiration)) {
    this.cache.set(key, { value, expiration: Date.now() + duration });
    return true;
  } else {
    this.cache.set(key, { value, expiration: Date.now() + duration });
    return false;
  }
};

TimeLimitedCache.prototype.get = function(key) {
  if (this.cache.has(key) && !this.isExpired(this.cache.get(key).expiration)) {
    return this.cache.get(key).value;
  } else {
    return -1;
  }
};

TimeLimitedCache.prototype.count = function() {
  let count = 0;
  for (let value of this.cache.values()) {
    if (!this.isExpired(value.expiration)) {
      count++;
    }
  }
  return count;
};

TimeLimitedCache.prototype.isExpired = function(expiration) {
  return Date.now() > expiration;
};
